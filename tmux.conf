# .tmux.conf

# Default parameters
set -g default-terminal "tmux-256color"
set -g history-limit 5000
set-option -g mouse on
set-option -g renumber-windows on
set-option -g status on
set-window-option -g automatic-rename on
set-window-option -g mode-keys vi
set-window-option -g monitor-activity on

# Colorscheme
set-option -g status-style bg=color237,fg=color223
set-option -g message-style bg=color237,fg=color223
set-window-option -g window-status-style bg=color237,fg=color223,italics
set-window-option -g window-status-current-style bg=color237,fg=color214,bold
set-option -g pane-border-style fg=colour237
set-option -g pane-active-border-style fg=colour214
set-option -g display-panes-colour colour237
set-option -g display-panes-active-colour colour214

# Status line
set -g status-left " #S #[bold]#H #[default]#(uptime | cut -d ',' -f 3- | cut -d ':' -f 2 | sed -e 's/,//g' | cut -d ' ' -f 2-) "
set -g status-left-length 100
set -g status-right " %H:%M %Y/%m/%d "
set -g status-right-length 100

# Set the prefix to C-a.
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Lockscreen
unbind C-x
bind C-x lock-server
unbind x
bind x lock-server

# New window
unbind C-c
bind C-c new-window
unbind c
bind c new-window

# Detach session
unbind C-d
bind C-d detach

# List clients
unbind *
bind * list-clients

# Next window
unbind C-n
bind C-n next-window
unbind n
bind n next-window

# Rename
unbind A
bind A command-prompt "rename-window %%"

# Last window
unbind C-a
bind C-a last-window

# Previous window
unbind C-p
bind C-p previous-window
unbind p
bind p previous-window

# Windows list
unbind C-w
bind C-w list-windows
unbind w
bind w list-windows

# Kill server
unbind /
bind / confirm-before "kill-server"

# Kill window
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# Refresh client
unbind C-l
bind C-l refresh-client
unbind l
bind l refresh-client

# Choose windows
unbind '"'
bind '"' choose-window

# Split horizontaly
unbind C-s
bind C-s split-window -v

# Split vertically
unbind S
bind S split-window -h
unbind s
bind s split-window -h

# Panes numbers
unbind q
bind q display-panes

# Kill pane
unbind C-k
bind C-k confirm-before "kill-pane"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

